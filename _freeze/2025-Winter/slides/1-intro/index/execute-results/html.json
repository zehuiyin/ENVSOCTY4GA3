{
  "hash": "91e5315d7207ec8882b7a10d78d1c765",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  revealjs:\n    pagetitle: \"Introduction and setting up R\"\n    menu: false\n    footer: \"2025 Zehui Yin\"\n---\n\n\n\n##\n\n<div style=\"text-align: center;\">\n  <b style=\"font-size: 68px;\">Zehui Yin</b>\n  <br>\n  First-year PhD Student in Geography at SEES\n</div>\n\n- **Email:** [yinz39@mcmaster.ca](mailto:yinz39@mcmaster.ca)\n<div style=\"font-size: 30px;\">\n  - Please use your McMaster email address.\n  - Please put the course code *ENVSOCTY 4GA3* in the subject line.\n  - Please include your name and student number in the body of the email.\n  - I will try to reply within 24 hours (please expect longer delays during weekends/holidays).\n</div>\n- **Personal Website:** [zehuiyin.github.io](https://zehuiyin.github.io/)\n- **Research Interests:** Spatial Analysis, Transportation, Travel Behaviour, Public Transit, Shared Mobility\n\n## Agenda for today\n\n- Introduction to basic concepts for coding in R\n- Getting a flavor of R syntax and style\n- Setting up R and reproducible environment on your personal computer\n\n## R and RStudio\n\n![](./images/R_logo.svg){height=150px}&emsp;&emsp;&emsp;\n![](./images/rstudio_logo.png){height=150px}\n\n- R is a free and open-source programming language for statistical computing and graphics.\n- RStudio is an integrated development environment (IDE) for coding in R.\n  - An IDE is a set of tools that helps you code.\n- We use RStudio to write our R codes.\n\n## R packages\n\n- R packages are the fundamental units of reproducible R code.\n- They can include functions, data, or both, along with documentation.\n- Think of them as plug-ins that enhance the functionality of existing software.\n- For example, web browser extensions like ad blockers add additional features that the original browser doesn't have.\n\n## Reproducible environment\n\n- An environment is the system where a program is run, including hardware and software such as operating system dependencies, programming language, packages, their configuration, and versions.\n- Just as running 1000 meters affects individuals differently, running code on different computers or with different package versions can produce varied results.\n- A reproducible environment ensures that everyone gets the same result by keeping the environment consistent.\n\n## `renv` package\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n![](./images/renv.png)\n:::\n\n::: {.column width=\"60%\"}\n- `renv` is an R package that helps create reproducible environments for R projects.\n- It records the R version and all R packages along with their versions in a lockfile.\n  - A lockfile is a text file that stores all the environment information.\n:::\n\n::::\n\n## Code hosting and Github\n\n:::: {.columns}\n\n::: {.column width=\"15%\"}\n![](./images/GitHub_Invertocat_Logo.svg){height=150px}\n:::\n\n::: {.column width=\"85%\"}\n- Code hosting involves storing code online to facilitate sharing, management, and collaboration with others.\n- One of the most popular code hosting platforms is GitHub (owned by Microsoft).\n- Both the textbook and the companion R package used in this course are hosted on GitHub.\n- GitHub is like a cloud drive (similar to OneDrive or Dropbox) but specialized for storing code, including R scripts.\n:::\n\n::::\n\n## R Markdown vs. R\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n![](./images/create_r_markdown.png){height=500px}\n:::\n\n::: {.column width=\"60%\"}\n- R Markdown is a file format that combines R code, its results, and accompanying text.\n- It uses the file extension `.Rmd` and essentially is a plain text file integrating markdown and R.\n- You can start by creating an `Rmd` file on the lab computer.\n:::\n\n::::\n\n## R Markdown syntax\n\n\n\n```{=html}\n<style>\ndiv[data-code-copy=\"false\"] button.code-copy-button {\n  display: none;\n}\n</style>\n```\n\n\n\n::: {code-copy=\"false\"}\n\n\n\n\n````{.default}\n---                                    # <1>\ntitle: \"Untitled\"\nauthor: \"Zehui Yin\"\noutput: html_document\n---\n\n# Heading level 1                      # <2>\n## Heading level 2\ntext...text...text\n**bold**   __bold__\n*italic*   _italic_\n\n```{r}                                 # <3>\nprint(\"Hello world!)\n```\n````\n\n\n\n1. **YAML header**: stores settings or meta information\n2. **Markdown text**: contains plain text in markdown format.\n3. **R code chunk**: contains R code to be executed\n\n:::\n\n## R basics: arthmatic operations\n\nYou can start by trying out R on the lab computer. Later, we'll set it up on your personal computer.\n\nR can be used as a calculator, using intuitive symbols for these operations:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\n8 - 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\n3 * 4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12\n```\n\n\n:::\n\n```{.r .cell-code}\n9 / 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n## R basics: assigning values\n\nOne of the cornerstones of programming languages is assignment. You can assign a value/object to a name using `<-` (suggested R style) or `=` (\"Python\" style).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 1\nb <- 3\na + b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc = 7\nd = 5\nc * d\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 35\n```\n\n\n:::\n:::\n\n\n\n## R basics: built-in functions\n\nR comes with many built-in functions. The calling syntax is `function(parameter1, parameter2, ...)`. Additionally, with extra R packages, there are even more functions you can use.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalues <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\nsum(values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 55\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\n# integrate the sin function from 0 to pi.\narea(sin, 0, pi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n## R basics: indexing\n\nIndexing is the process of selecting specific values from an object based on their index location. Whenever you see `[]` or `$` in R, some form of indexing is happening.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|   |   |   |   |   |   |   |   |   |   |\n|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|\n|  1|  2|  3|  4|  5|  6|  7|  8|  9| 10|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nv[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nv[2:4]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 3 4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nv[c(TRUE, T, T, T, T, TRUE,\n    FALSE, F, FALSE, F)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5 6\n```\n\n\n:::\n:::\n\n\n\n## R basics: indexing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(col1 = c(1, 2, 3),\n                 col2 = c(4, 5, 6))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n| col1| col2|\n|----:|----:|\n|    1|    4|\n|    2|    5|\n|    3|    6|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf[1, 2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf[, \"col2\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4 5 6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$col1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3\n```\n\n\n:::\n:::\n\n\n\n## R basics: flow control\n\nFlow control is an important component of any programming language. In R, the `if-else` statement and loops work as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 6\nif (x > 5) { \n  print(\"Greater than 5\") \n} else {\n  print(\"Less or equal to 5\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Greater than 5\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:3) {\n  print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n## R basics: custom functions\n\nTo define your own function in R, you can use the following syntax. Note that the last line of code is automatically returned by R, though a \"Python\" style return statement is also valid in R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd <- function(a, b) { \n  a + b\n}\n\nadd(1, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd <- function(a, b) { \n  return(a + b)\n}\n\nadd(1, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n## Download R version 4.4.2\n\n[mirror.csclub.uwaterloo.ca/CRAN](https://mirror.csclub.uwaterloo.ca/CRAN/)\n![](./images/download_r.png){height=500px}\n\n## Download RStudio\n\n[posit.co/download/rstudio-desktop](https://posit.co/download/rstudio-desktop/)\n![](./images/download_rstudio.png){height=500px}\n\n## Restoring the environment\n\nDownload the `Applied-Spatial-Statistics` zip file from Avenue and unzip it. You should then have a folder with the following structure:\n\n<!---\nGenerated using https://tree.nathanfriend.io\n\nText used:\n\n- Applied-Spatial-Statistics\n  - renv/\n  - .gitignore\n  - .Rprofile\n  - Applied-Spatial-Statistics.Rproj\n  - README.md\n  - README.Rmd\n  - renv.lock\n  \n--->\n\n```\nApplied-Spatial-Statistics/\n├── renv/\n├── .gitignore\n├── .Rprofile\n├── Applied-Spatial-Statistics.Rproj\n├── README.md\n├── README.Rmd\n└── renv.lock\n```\n\n- Double-click the `Applied-Spatial-Statistics.Rproj` file to open the R project.\n\n## Restoring the environment\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n![](./images/restore.png){width=300px}\n![](./images/restore1.png){width=300px}\n:::\n\n::: {.column width=\"40%\"}\n- Navigate to the bottom right panel.\n- Click the Packages tab, then the renv button, and finally select the `Restore Library` option.\n- Click the `Restore` button in the pop-up panel.\n:::\n\n::::\n\n## RTools 4.4 for Windows users\n\n[mirror.csclub.uwaterloo.ca/CRAN/bin/windows/Rtools](https://mirror.csclub.uwaterloo.ca/CRAN/bin/windows/Rtools/)\n\n![](./images/rtools.png){height=150px}\n\n- Ensure you download the `Rtools` version that matches your installed R version.\n- Rtools is a set of programs required on **Windows** to build R packages from source.\n- Note: If you are using Mac or Linux, Rtools is **not** required.\n\n## Install $\\LaTeX$\n\n$\\LaTeX$ is a high-quality typesetting system. While it may seem as a language, understanding it isn't necessary for our purposes. We will use it to export `Rmd` files with results into PDF files.\n\nIf you already use $\\LaTeX$ and have it installed through `MiKTeX` or `TeX Live`, you can skip this step.\n\nIf you are unfamiliar with $\\LaTeX$ and don't have it installed yet, simply run the following R code to install it:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntinytex::install_tinytex()\n```\n:::\n\n\n\n## Lab slides\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n```{=html}\n<p>\n<img src=\"./images/qr_code.svg\" style=\"width:100%;\"/>\n</p>\n```\n\n\n\n:::\n\n::: {.column width=\"65%\"}\n\n- You can access all the lab slides by scanning the QR code or by visiting the URL directly.\n\n- [zehuiyin.github.io/ENVSOCTY4GA3](https://zehuiyin.github.io/ENVSOCTY4GA3/)\n\n:::\n\n::::\n\n## References\n\n- <https://r-pkgs.org/>\n- <https://book.the-turing-way.org/reproducible-research/renv.html>\n- <https://rstudio.github.io/renv/articles/renv.html>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}